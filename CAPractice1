alpha = 'zyxwvutsrqponmlkjihgfedcba'
alphacorrect = 'abcdefghijklmnopqrstuvwxyz'
alphalist = list(alpha)
alphaCL = list(alphacorrect)
print(alphalist)
print(alphaCL)
Vmessage = "xuo jxuhu! jxyi yi qd unqcfbu ev q squiqh syfxuh. muhu oek qrbu je tusetu yj? y xefu ie! iudt cu q cuiiqwu rqsa myjx jxu iqcu evviuj!"
message = "Eat a dick, fucko."
def decoder(message, offset):
    newdecodedlist = []
    for letter in range(len(message)):
        lette = message[letter]
        if lette.isalpha():
            if lette in alphalist:
                newdecodedlist.append(alphalist[alphalist.index(lette) - offset])
        elif lette.isalpha() == False:
            newdecodedlist.append(message[message.index(lette)])
    return ''.join(newdecodedlist)
  


def coder(messag, offset):
    #^ ran into a little snafu here with the casing, and this was the fastest way to not have to rewrite code
    message = messag.lower()
    newdecodedlist = []
    AlphaDecoded = list(decoder(alphalist, offset))
    for letter in range(len(message)):
        lette = message[letter]
        if lette.isalpha():
            if lette in AlphaDecoded:
                newdecodedlist.append(AlphaDecoded[(AlphaDecoded.index(lette) + offset) % 26])
        elif lette.isalpha() == False:
            newdecodedlist.append(message[message.index(lette)])
    return ''.join(newdecodedlist)


NuMessage = "vhfinmxkl atox kxgwxkxw tee hy maxlx hew vbiaxkl tl hulhexmx. px'ee atox mh kxteer lmxi ni hnk ztfx by px ptgm mh dxxi hnk fxlltzxl ltyx."

S5Message = "dfc aruw fsti gr vjtwhr wznj? vmph otis! cbx swv jipreneo uhllj kpi rahjib eg fjdkwkedhmp!"

def VDcoder(message, keyword):
    decodedmessage = []
    loopingvalue = 0
    for index in range(len(message)):
        if message[index].isalpha():
            if loopingvalue == len(keyword):
                loopingvalue = 0
            decodedindex = alpha.index(message[index]) - alpha.index(keyword[loopingvalue])
            decodedmessage.append(alpha[decodedindex % 26 - 1])
            loopingvalue += 1
        else:
            decodedmessage.append(message[index])
    return ''.join(decodedmessage)
    
def VCoder(message, keyword):
    codedmessage = []
    loopingvalue = 0
    messagelower = message.lower()
    for index in range(len(message)):
        if message[index].isalpha():
            if loopingvalue == len(keyword):
                loopingvalue = 0
            codedindex = alpha.index(messagelower[index]) + alpha.index(keyword[loopingvalue])
            codedmessage.append(alpha[codedindex % 26 + 1])
            loopingvalue += 1
        else:
            codedmessage.append(message[index])
    return ''.join(codedmessage)
    
print(VDcoder(S5Message,"friends"))
print(VCoder(message, 'fuck'))
print(VDcoder((VCoder(message, 'fuck')),"fuck"))
